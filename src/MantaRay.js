/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Ben Lebreux (https://sketchfab.com/ben.lebreux)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/low-poly-mantaray-62ccfb67f0d9476d8857fce3599ace04
title: Low-Poly Mantaray
*/

import React, { useRef, useEffect } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { MeshStandardMaterial } from 'three';

const MODEL = '/models/manta_ray_bubble.glb';
export function MantaRay(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(MODEL);
  const { actions } = useAnimations(animations, group);
  useEffect(() => {
    const chillFactor = 1.5;
    animations[0].duration *= chillFactor;
    for (let i = 0; i < animations[0].tracks.length; i++) {
      for (let j = 0; j < animations[0].tracks[i].times.length; j++) {
        animations[0].tracks[i].times[j] *= chillFactor;
      }
    }
    const animationAction = actions['Swimming'];
    animationAction.play();
  });
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_model" scale={2} rotation={[-Math.PI / 2, 0, 0]}>
        <group name="Root">
          <group name="Rausku_armature">
            <primitive object={nodes.Rausku_armature_rootJoint} />
            <group name="Rausku_mesh" />
            <skinnedMesh
              name="Rausku_mesh_0"
              geometry={nodes.Rausku_mesh_0.geometry}
              material={materials.Rausku_texture}
              skeleton={nodes.Rausku_mesh_0.skeleton}
              castShadow
            />
            <skinnedMesh
              name="Rausku_mesh_1"
              geometry={nodes.Rausku_mesh_1.geometry}
              material={materials.Rausku_outline}
              skeleton={nodes.Rausku_mesh_1.skeleton}
              castShadow
            />
          </group>

          <group name="Fish_Armature">
            <primitive object={nodes.Fish_Armature_rootJoint} />
            <group name="Fish_mesh" />
            <skinnedMesh
              name="Fish_mesh_0"
              geometry={nodes.Fish_mesh_0.geometry}
              material={materials.Rausku_outline}
              skeleton={nodes.Fish_mesh_0.skeleton}
              castShadow
            />
          </group>
          <group name="Fish_Armature001">
            <primitive object={nodes.Fish_Armature001_rootJoint} />
            <group name="Fish_mesh001" />
            <skinnedMesh
              name="Fish_mesh001_0"
              geometry={nodes.Fish_mesh001_0.geometry}
              material={materials.Rausku_outline}
              skeleton={nodes.Fish_mesh001_0.skeleton}
              castShadow
            />
          </group>
          <group name="Fish_Armature002">
            <primitive object={nodes.Fish_Armature002_rootJoint} />
            <group name="Fish_mesh002" />
            <skinnedMesh
              name="Fish_mesh002_0"
              geometry={nodes.Fish_mesh002_0.geometry}
              material={materials.Rausku_outline}
              skeleton={nodes.Fish_mesh002_0.skeleton}
              castShadow
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(MODEL);
