/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: BlueMesh (https://sketchfab.com/VapTor)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/great-white-shark-b67415aaa0bd450d865f9604dcdac244
title: Great White Shark
npx gltfjsx great_white_shark.glb 
*/
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: DigitalLife3D (https://sketchfab.com/DigitalLife3D)
license: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
source: https://sketchfab.com/3d-models/model-54a-caribbean-reef-shark-210302e0e0e74c36834fb00aaa14c7c2
title: Model 54A - Caribbean Reef Shark
*/

import React, { useRef, useEffect } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { Quaternion } from 'three';

export function Shark(props) {
  const group = useRef();
  const innerGroup = useRef();
  const sharkEyes = useRef();
  const sharkBody = useRef();
  const { nodes, materials, animations } = useGLTF(
    '/models/caribbean_reef_shark.glb'
  );
  const { actions } = useAnimations(animations, group);
  useEffect(() => {
    const animationAction = actions.Action;
    animationAction.play();
  });
  let time = 0;
  // complicated way: https://www.html5gamedevs.com/topic/39335-make-sprite-follow-cursor-including-rotating-it-but-in-steps/

  let quaternion = new Quaternion();

  useFrame(
    (gl, delta) => {
      //quaternion.setFromAxisAngle([0,0,0], Math.PI);
      //console.log(gl.clock);
      //console.log(innerGroup.current.rotation);
      time += delta ;
      // todo: RTFM
      // https://dev.to/keefdrive/crash-course-in-interactive-3d-animation-with-react-three-fiber-and-react-spring-2dj

      group.current.rotation.y = group.current.rotation.y - delta/5; //1*Math.cos(time) + 0;
      //group.current.rotation.z +=delta//1*Math.sin(time) + 0;
      //innerGroup.current.position.x =10*Math.cos(time) + 0;
      //innerGroup.current.position.z =10*Math.sin(time) + 0;
      //innerGroup.current.rotation.setFromVector3([0,0,0])
      //innerGroup.current.rotation.setFrom
      //innerGroup.lookAt([0,0,0]);
    },
    [group]
  );

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_model" scale={1}>
        <group
          ref={innerGroup}
          name="Carribean_Reef_Shark_Armature_33"
          scale={10}
          position={[0, 0, 100]}
        >
          <primitive object={nodes.GLTF_created_0_rootJoint} />
          <skinnedMesh
            name="Object_7"
            geometry={nodes.Object_7.geometry}
            material={materials.Diffuse_Eye}
            skeleton={nodes.Object_7.skeleton}
          />
          <skinnedMesh
            name="Object_8"
            geometry={nodes.Object_8.geometry}
            material={materials.CRS_Material}
            skeleton={nodes.Object_8.skeleton}
            castShadow
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/caribbean_reef_shark.glb');
